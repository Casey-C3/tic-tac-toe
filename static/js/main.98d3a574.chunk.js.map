{"version":3,"sources":["Components/Board.js","Components/Modal.js","Components/App.js","index.js"],"names":["Board","board","placeMark","isArray","console","log","className","map","spot","index","id","onClick","e","target","Modal","showModal","win","closeModal","App","useState","turn","setTurn","setBoard","winner","setWinner","round","setRound","modal","setModal","draw","setDraw","winState","value","length","newBoard","i","slot","slot1","slot2","ReactDOM","render","document","getElementById"],"mappings":"qMA6BeA,EA5BD,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,UAInB,OAHGD,EAAME,SACLC,QAAQC,IAAIJ,GAGZ,sBAAKK,UAAU,YAAf,UACA,qBAAKA,UAAU,OAAf,SACE,+CAIF,8BAEE,qBAAKA,UAAU,QAAf,SAECL,EAAMM,KAAI,SAACC,EAAKC,GAAN,OACP,qBAAKH,UAAU,kBAAkBI,GAAID,EAAoBE,QAAS,SAACC,GAAD,OAAOV,EAAUU,EAAEC,OAAOH,KAA5F,SAAkGF,GAAjDC,EAAM,cCAtDK,EAjBD,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,UAAUC,EAAoB,EAApBA,IAAIC,EAAgB,EAAhBA,WAC1B,OAAIF,EAIA,qBAAKT,UAAU,QAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,+BAAa,KAARU,EAAa,OAAb,iBAAgCA,EAAhC,SAAL,OACA,wBAAQL,QAASM,EAAjB,0BAND,MCgFAC,EA/EH,WACV,MAAsBC,oBAAS,GAA/B,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAAwBF,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAA1D,mBAAMlB,EAAN,KAAYqB,EAAZ,KACA,EAA0BH,mBAAS,IAAnC,mBAAMI,EAAN,KAAaC,EAAb,KACA,EAAwBL,mBAAS,GAAjC,mBAAMM,EAAN,KAAYC,EAAZ,KACA,EAAwBP,oBAAS,GAAjC,mBAAMQ,EAAN,KAAYC,EAAZ,KACA,EAAsBT,oBAAS,GAA/B,mBAAMU,EAAN,KAAWC,EAAX,KAGMC,EAAU,CAAC,CAAC,EAAE,EAAE,GACN,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAgDrB,OACE,gCACE,wBAGA,cAAC,EAAD,CAAO9B,MAAOA,EAAOC,UAlDL,SAAC8B,GAGnB,GAA2B,IAAxB/B,EAAM+B,GAAOC,OAAc,CAC5B,IAAIC,EAAQ,YAAOjC,GACnBiC,EAASF,GAASZ,EAAO,IAAI,IAE7BM,EADaD,EAAM,GAEnB,IAAI,IAAIU,EAAI,EAAGA,EAAIJ,EAASE,OAAQE,IAAK,CACvC,IAAIC,EAAOL,EAASI,GAAG,GACnBE,EAAQN,EAASI,GAAG,GACpBG,EAAQP,EAASI,GAAG,GACxB,GAAsB,KAAnBD,EAASE,IAAgBF,EAASE,KAAUF,EAASG,IAAUH,EAASI,KAAWJ,EAASE,GAE7FZ,EADUJ,EAAO,IAAI,KAErBQ,GAAS,GAObN,EAASY,GACTb,GAASD,GAGE,IAAVK,GAAyB,KAAVF,IAChBO,GAASD,GACTD,GAAS,OAwBT,cAAC,EAAD,CAAOb,UAAWY,EAAOX,IAAKO,EAAQN,WAlBvB,WAEjBK,EADiB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAE1CE,EAAU,IACVH,GAAQ,GACRO,GAAS,GACTF,EAAS,GACTI,GAAQ,IAWwDD,KAAQA,IACtE,sBAAKvB,UAAU,cAAf,0BACgBc,EAAO,IAAI,WCtEjCmB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.98d3a574.chunk.js","sourcesContent":["\r\nconst Board = ({board, placeMark}) => {\r\n    if(board.isArray) {\r\n        console.log(board)\r\n    }\r\n    return (\r\n        <div className='container'>\r\n        <div className='game'>\r\n          <h1>Tic-Tac-Toe</h1>\r\n\r\n          \r\n        </div>\r\n        <div>\r\n          \r\n          <div className='board'>\r\n             \r\n          {board.map((spot,index) => (\r\n              <div className='board-row-child' id={index} key={index+1}onClick={(e) => placeMark(e.target.id)}>{spot}</div> \r\n          ))}\r\n             \r\n             \r\n           \r\n  \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    )\r\n}\r\nexport default Board\r\n\r\n/*   <div className='board-row-child' id={index+1} onClick={(e) => placeMark(e.target.id)}>{spot}</div>   */","const Modal = ({showModal,win,closeModal}) => {\r\n    if(!showModal) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <h2>{win === '' ? 'Draw' : `Player ${win} wins` }!</h2>\r\n                <button onClick={closeModal}>Restart</button>\r\n\r\n\r\n            </div>\r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Modal;","import React, { useState,useEffect } from 'react'\nimport Board from './Board'\nimport Modal from './Modal'\nconst App = () => {\n  const[turn,setTurn] = useState(true)\n  const[board,setBoard] = useState(['','','','','','','','',''])\n  const[winner,setWinner] = useState('')\n  const[round,setRound] = useState(0)\n  const[modal,setModal] = useState(false)\n  const[draw,setDraw] = useState(false)\n  \n\n  const winState =[[0,1,2],\n                  [3,4,5],\n                  [6,7,8],\n                  [0,3,5],\n                  [1,4,7],\n                  [2,5,8],\n                  [0,4,8],\n                  [2,4,6]];\n\n\n  const placeMarker = (value) => {\n    \n    \n    if(board[value].length === 0) {\n      let newBoard = [...board]\n      newBoard[value] = turn ? 'X':'O'\n      let rounds = round+1\n      setRound(rounds)\n      for(let i = 0; i < winState.length; i++) {\n        let slot = winState[i][0]\n        let slot1 = winState[i][1]\n        let slot2 = winState[i][2]\n        if(newBoard[slot] !== '' && newBoard[slot] === newBoard[slot1] && newBoard[slot2] === newBoard[slot] ) {\n          let win = turn ? 'X':'O'\n          setWinner(win)\n          setModal(true)\n          \n          \n        } \n\n      }\n      \n      setBoard(newBoard)\n      setTurn(!turn)\n      \n    }  \n    if(round === 8 && winner=== '') {\n      setDraw(!draw)\n      setModal(true)\n      \n    }\n  \n  }\n\n  const closeModal = () => {\n    const newBoard = ['','','','','','','','','']\n    setBoard(newBoard)\n    setWinner('')\n    setTurn(true)\n    setModal(false)\n    setRound(0)\n    setDraw(false)\n\n  }\n \n  return(\n    <div>\n      <div>\n        \n      </div>\n      <Board board={board} placeMark = {placeMarker} />\n     \n      <Modal showModal={modal} win={winner} closeModal={closeModal} draw = {draw}/>  \n      <div className='player-turn'>\n        Next Player: {turn ? 'X':'O'}\n      </div>\n    </div>\n    \n  )\n}\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}